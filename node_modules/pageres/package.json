{
  "_args": [
    [
      {
        "raw": "pageres@^4.4.0",
        "scope": null,
        "escapedName": "pageres",
        "name": "pageres",
        "rawSpec": "^4.4.0",
        "spec": ">=4.4.0 <5.0.0",
        "type": "range"
      },
      "/Users/Monk/Desktop/GUSTAVO/site-grid/monk-framework"
    ]
  ],
  "_from": "pageres@>=4.4.0 <5.0.0",
  "_id": "pageres@4.4.0",
  "_inCache": true,
  "_location": "/pageres",
  "_nodeVersion": "4.7.3",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/pageres-4.4.0.tgz_1489995923083_0.8295588013716042"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {
    "lodash._reinterpolate": "3.0.0",
    "strip-outer": "1.0.0",
    "trim-repeated": "1.0.0"
  },
  "_requested": {
    "raw": "pageres@^4.4.0",
    "scope": null,
    "escapedName": "pageres",
    "name": "pageres",
    "rawSpec": "^4.4.0",
    "spec": ">=4.4.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/pageres/-/pageres-4.4.0.tgz",
  "_shasum": "7ef51f685d64172a422b989d8628755189aa297c",
  "_shrinkwrap": null,
  "_spec": "pageres@^4.4.0",
  "_where": "/Users/Monk/Desktop/GUSTAVO/site-grid/monk-framework",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "babel": {
    "plugins": [
      "transform-async-to-generator",
      "transform-runtime",
      "transform-flow-strip-types",
      "add-module-exports"
    ],
    "presets": [
      "es2015-node4"
    ],
    "sourceMaps": "inline"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/pageres/issues"
  },
  "dependencies": {
    "array-differ": "^1.0.0",
    "array-uniq": "^1.0.2",
    "babel-runtime": "^6.6.1",
    "easydate": "^2.0.0",
    "filenamify": "^2.0.0",
    "filenamify-url": "^1.0.0",
    "fs-write-stream-atomic": "^1.0.2",
    "get-res": "^3.0.0",
    "lodash.template": "^4.0.1",
    "log-symbols": "^1.0.2",
    "mem": "^1.1.0",
    "mkdirp": "^0.5.0",
    "pify": "^2.3.0",
    "plur": "^2.0.0",
    "protocolify": "^2.0.0",
    "rimraf": "^2.2.8",
    "screenshot-stream": "^4.1.0",
    "unused-filename": "^0.1.0",
    "viewport-list": "^5.0.1"
  },
  "description": "Capture website screenshots",
  "devDependencies": {
    "ava": "*",
    "babel-cli": "^6.7.5",
    "babel-eslint": "^7.1.1",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-async-to-generator": "^6.7.4",
    "babel-plugin-transform-flow-strip-types": "^6.14.0",
    "babel-plugin-transform-runtime": "^6.7.5",
    "babel-preset-es2015-node4": "^2.1.0",
    "cookie": "^0.3.1",
    "coveralls": "^2.11.2",
    "flow-bin": "^0.42.0",
    "get-port": "^3.0.0",
    "get-stream": "^3.0.0",
    "image-size": "^0.5.0",
    "nyc": "^10.0.0",
    "path-exists": "^3.0.0",
    "png-js": "^0.1.1",
    "rfpify": "^1.0.0",
    "sinon": "^2.0.0",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "7ef51f685d64172a422b989d8628755189aa297c",
    "tarball": "https://registry.npmjs.org/pageres/-/pageres-4.4.0.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "dist"
  ],
  "gitHead": "cdd335ae3aa3e725e19c1762abb9715db115c6c8",
  "homepage": "https://github.com/sindresorhus/pageres#readme",
  "keywords": [
    "page",
    "website",
    "site",
    "web",
    "url",
    "resolution",
    "size",
    "screenshot",
    "screenshots",
    "screengrab",
    "screen",
    "snapshot",
    "shot",
    "responsive",
    "gulpfriendly",
    "phantom",
    "phantomjs",
    "image",
    "svg",
    "render",
    "html",
    "headless",
    "capture",
    "pic",
    "picture",
    "png",
    "jpg",
    "jpeg"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "Kevin Mårtensson",
      "email": "kevinmartensson@gmail.com",
      "url": "github.com/kevva"
    },
    {
      "name": "Sam Verschueren",
      "email": "sam.verschueren@gmail.com",
      "url": "github.com/SamVerschueren"
    }
  ],
  "name": "pageres",
  "optionalDependencies": {},
  "readme": "# ![pageres](media/promo.png)\n\n[![Build Status](https://travis-ci.org/sindresorhus/pageres.svg?branch=master)](https://travis-ci.org/sindresorhus/pageres) [![Coverage Status](https://coveralls.io/repos/sindresorhus/pageres/badge.svg?branch=master)](https://coveralls.io/r/sindresorhus/pageres?branch=master) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\n\nCapture screenshots of websites in various resolutions. A good way to make sure your websites are responsive. It's speedy and generates 100 screenshots from 10 different websites in just over a minute. It can also be used to render SVG images.\n\n*See [pageres-cli](https://github.com/sindresorhus/pageres-cli) for the command-line tool.*\n\n\n## Install\n\n```\n$ npm install --save pageres\n```\n\n*PhantomJS, which is used for generating the screenshots, is installed automagically, but in some [rare cases](https://github.com/Obvious/phantomjs/issues/102) it might fail to and you'll get an `Error: spawn EACCES` error. [Download](http://phantomjs.org/download.html) PhantomJS manually and reinstall pageres if that happens.*\n\n\n## Usage\n\n```js\nconst Pageres = require('pageres');\n\nconst pageres = new Pageres({delay: 2})\n\t.src('yeoman.io', ['480x320', '1024x768', 'iphone 5s'], {crop: true})\n\t.src('todomvc.com', ['1280x1024', '1920x1080'])\n\t.src('data:text/html;base64,PGgxPkZPTzwvaDE+', ['1024x768'])\n\t.dest(__dirname)\n\t.run()\n\t.then(() => console.log('done'));\n```\n\n## API\n\n### Pageres([options])\n\n#### options\n\n##### delay\n\nType: `number` *(seconds)*<br>\nDefault: `0`\n\nDelay capturing the screenshot.\n\nUseful when the site does things after load that you want to capture.\n\n##### timeout\n\nType: `number` *(seconds)*<br>\nDefault: `60`\n\nNumber of seconds after which PhantomJS aborts the request.\n\n##### crop\n\nType: `boolean`<br>\nDefault: `false`\n\nCrop to the set height.\n\n##### css\n\nType: `string`\n\nApply custom CSS to the webpage. Specify some CSS or the path to a CSS file.\n\n##### script\n\nType: `string`\n\nApply custom JavaScript to the webpage. Specify some JavaScript or the path to a file.\n\n##### cookies\n\nType: `Array<string>` `Object`\n\nA string with the same format as a [browser cookie](https://en.wikipedia.org/wiki/HTTP_cookie) or an object of what [`phantomjs.addCookie`](http://phantomjs.org/api/phantom/method/add-cookie.html) accepts.\n\n###### Tip\n\nGo to the website you want a cookie for and copy-paste it from Dev Tools.\n\n##### filename\n\nType: `string`\n\nDefine a customized filename using [Lo-Dash templates](https://lodash.com/docs#template).<br>\nFor example `<%= date %> - <%= url %>-<%= size %><%= crop %>`.\n\nAvailable variables:\n\n- `url`: The URL in [slugified](https://github.com/sindresorhus/filenamify-url) form, eg. `http://yeoman.io/blog/` becomes `yeoman.io!blog`\n- `size`: Specified size, eg. `1024x1000`\n- `width`: Width of the specified size, eg. `1024`\n- `height`: Height of the specified size, eg. `1000`\n- `crop`: Outputs `-cropped` when the crop option is true\n- `date`: The current date (Y-M-d), eg. 2015-05-18\n- `time`: The current time (h-m-s), eg. 21-15-11\n\n##### incrementalName\n\nType: `boolean`<br>\nDefault: `false`\n\nWhen a file exists, append an incremental number.\n\n##### selector\n\nType: `string`\n\nCapture a specific DOM element matching a CSS selector.\n\n##### hide\n\nType: `Array<string>`\n\nHide an array of DOM elements matching CSS selectors.\n\n##### username\n\nType: `string`\n\nUsername for authenticating with HTTP auth.\n\n##### password\n\nType: `string`\n\nPassword for authenticating with HTTP auth.\n\n##### scale\n\nType: `number`<br>\nDefault: `1`\n\nScale webpage `n` times.\n\n##### format\n\nType: `string`<br>\nDefault: `png`<br>\nValues: `png`, `jpg`\n\nImage format.\n\n##### userAgent\n\nType: `string`\n\nCustom user agent.\n\n##### headers\n\nType: `Object`\n\nCustom HTTP request headers.\n\n\n### pageres.src(url, sizes, options)\n\nAdd a page to screenshot.\n\n#### url\n\n*Required*<br>\nType: `string`\n\nURL or local path to the website you want to screenshot. You can also use a data URI.\n\n#### sizes\n\n*Required*<br>\nType: `Array<string>`\n\nUse a `<width>x<height>` notation or a keyword.\n\nA keyword is a version of a device from [this list](http://viewportsizes.com).\nYou can also pass in the `w3counter` keyword to use the ten most popular\nresolutions from [w3counter](http://www.w3counter.com/globalstats.php).\n\n#### options\n\nType: `Object`\n\nOptions set here will take precedence over the ones set in the constructor.\n\n### pageres.dest(directory)\n\nSet the destination directory.\n\n#### directory\n\nType: `string`\n\n### pageres.run()\n\nRun pageres. Returns a promise for an array of streams.\n\n### pageres.on('warning', callback)\n\nWarnings with e.g. page errors.\n\n\n## Task runners\n\nCheck out [grunt-pageres](https://github.com/sindresorhus/grunt-pageres) if you're using Grunt.\n\nFor Gulp and Broccoli, just use the API directly. No need for a wrapper plugin.\n\n\n## Built with Pageres\n\n- [Break Shot](https://github.com/victorferraz/break-shot) - Desktop app for capturing screenshots of responsive websites.\n\n\n## Team\n\n[![Sindre Sorhus](http://gravatar.com/avatar/d36a92237c75c5337c17b60d90686bf9?s=144)](https://sindresorhus.com) | [![Kevin Mårtensson](https://gravatar.com/avatar/48fa294e3cd41680b80d3ed6345c7b4d?s=144)](https://github.com/kevva) | [![Sam Verschueren](https://gravatar.com/avatar/30aba8d6414326b745aa2516f5067d53?s=144)](https://github.com/SamVerschueren)\n---|---|---\n[Sindre Sorhus](https://sindresorhus.com) | [Kevin Mårtensson](https://github.com/kevva) | [Sam Verschueren](https://github.com/SamVerschueren)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/pageres.git"
  },
  "scripts": {
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "flow": "flow || true",
    "prepublish": "babel lib --out-dir=dist",
    "test": "xo && npm run prepublish && nyc ava"
  },
  "version": "4.4.0",
  "xo": {
    "parser": "babel-eslint",
    "rules": {
      "generator-star-spacing": "off"
    }
  }
}
