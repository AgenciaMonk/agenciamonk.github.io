{
  "_args": [
    [
      {
        "raw": "gulp-responsive@^2.7.0",
        "scope": null,
        "escapedName": "gulp-responsive",
        "name": "gulp-responsive",
        "rawSpec": "^2.7.0",
        "spec": ">=2.7.0 <3.0.0",
        "type": "range"
      },
      "/Users/Monk/Desktop/GUSTAVO/site-grid/monk-framework"
    ]
  ],
  "_from": "gulp-responsive@>=2.7.0 <3.0.0",
  "_id": "gulp-responsive@2.7.0",
  "_inCache": true,
  "_location": "/gulp-responsive",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/gulp-responsive-2.7.0.tgz_1482146686508_0.31180684082210064"
  },
  "_npmUser": {
    "name": "mahnunchik",
    "email": "mahnunchik@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-responsive@^2.7.0",
    "scope": null,
    "escapedName": "gulp-responsive",
    "name": "gulp-responsive",
    "rawSpec": "^2.7.0",
    "spec": ">=2.7.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-responsive/-/gulp-responsive-2.7.0.tgz",
  "_shasum": "aab9f522c524aa9ebb46352af698a3bec3010313",
  "_shrinkwrap": null,
  "_spec": "gulp-responsive@^2.7.0",
  "_where": "/Users/Monk/Desktop/GUSTAVO/site-grid/monk-framework",
  "author": {
    "name": "Evgeny Vlasenko",
    "email": "mahnunchik+responsive@gmail.com",
    "url": "https://github.com/mahnunchik"
  },
  "bugs": {
    "url": "https://github.com/mahnunchik/gulp-responsive/issues"
  },
  "dependencies": {
    "async": "^2.0.1",
    "gulp-util": "^3.0.1",
    "lodash": "^4.5.0",
    "minimatch": "^3.0.0",
    "plur": "^2.1.2",
    "rename": "^1.0.3",
    "sharp": "^0.17.0",
    "through2": "^2.0.0"
  },
  "description": "gulp responsive images",
  "devDependencies": {
    "file-type": "^4.0.0",
    "jshint": "^2.5.10",
    "mocha": "^3.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "aab9f522c524aa9ebb46352af698a3bec3010313",
    "tarball": "https://registry.npmjs.org/gulp-responsive/-/gulp-responsive-2.7.0.tgz"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "gitHead": "4f2f8babb6c967dfd78e5d082c47ae6c8cd0a375",
  "homepage": "https://github.com/mahnunchik/gulp-responsive#readme",
  "keywords": [
    "gulpplugin",
    "gulp",
    "sharp",
    "responsive",
    "img",
    "images",
    "picture",
    "picturefill",
    "scrset",
    "image-set",
    "gulp-responsive",
    "gulp-responsive-images"
  ],
  "license": "MIT",
  "main": "lib",
  "maintainers": [
    {
      "name": "mahnunchik",
      "email": "mahnunchik@gmail.com"
    }
  ],
  "name": "gulp-responsive",
  "optionalDependencies": {},
  "readme": "# [gulp](http://gulpjs.com)-responsive [![Build Status](https://travis-ci.org/mahnunchik/gulp-responsive.svg?branch=master)](https://travis-ci.org/mahnunchik/gulp-responsive)\n\n> Generates images at different sizes\n\n\n## Installation\n\n\n`gulp-responsive` depends on [sharp](https://github.com/lovell/sharp). Sharp is one of the fastest Node.js modules for resizing JPEG, PNG, WebP and TIFF images.\n\nIf you are using Mac OS then before installing `gulp-responsive` you should install the [libvips](https://github.com/jcupitt/libvips) library. Further information and instructions can be found in the [sharp installation guide](http://sharp.dimens.io/en/stable/install/).\n\n```sh\n$ npm install --save-dev gulp-responsive\n```\n\n\n## Usage\n\n```js\nvar gulp = require('gulp');\nvar responsive = require('gulp-responsive');\n\ngulp.task('default', function () {\n  return gulp.src('src/*.{png,jpg}')\n    .pipe(responsive({\n      'background-*.jpg': {\n        width: 700,\n        quality: 50\n      },\n      'cover.png': {\n        width: '50%',\n        // convert to jpeg format\n        format: 'jpeg',\n        rename: 'cover.jpg'\n      },\n      // produce multiple images from one source\n      'logo.png': [\n        {\n          width: 200\n        },{\n          width: 200 * 2,\n          rename: 'logo@2x.png'\n        }\n      ]\n    }))\n    .pipe(gulp.dest('dist'));\n});\n```\n\n## [Examples](./examples)\n\n* [Simple example](./examples/simple.md)\n* [Multiple resolutions](./examples/multiple-resolutions.md)\n* [Advanced example](./examples/advanced.md)\n\n### Integration\n\n* [HTML `srcset` attribute](./examples/srcset.md)\n* [HTML `<picture>` element](./examples/picture.md)\n* [CSS `image-set` method](./examples/image-set.md)\n\n### All together :fireworks:\n\n* [`gulp-responsive` config generation example](./examples/gulp-responsive-config.md)\n\n## API\n\n### responsive([config](#config), [options](#options))\n\n#### config\n\nConfiguration can be provided in one of the following formats:\n\n##### 1.  Array of unique configurations\n\n```js\n[{\n  name: 'logo.png',\n  width: 200,\n  height: 100\n},{\n  name: 'banner.png',\n  width: 500\n}]\n```\n\n##### 2. Object of unique configurations. Keys are filenames.\n\n```js\n{\n  'logo.png': {\n    width: 300,\n    height: 200,\n    rename: 'logo@2x.png'\n  },\n  'background-*.png': {\n    width: 1400,\n    withoutEnlargement: true\n  }\n}\n```\n\n##### 3. Object of arrays of unique configurations. Keys are filenames.\n\n```js\n{\n  'logo.png': [{\n      width: 200,\n      rename: 'logo@1x.png'\n    },{\n      width: 400,\n      rename: 'logo@2x.png'\n    }],\n  'background-*': [{\n    height: 400\n  }]\n}\n```\n\n#### Configuration unit\n\nConfiguration unit is an object:\n\n* **name**: *String* — filename glob pattern.\n* **width**: *Number* or *String* — width in pixels or percentage of the original, not set by default.\n* **height**: *Number* or *String* — height in pixels or percentage of the original, not set by default.\n* [**withoutEnlargement**](http://sharp.dimens.io/en/stable/api/#withoutenlargement): *Boolean* — do not enlarge the output image, default `true`.\n* **skipOnEnlargement**: *Boolean* — do not write an output image at all if the original image is smaller than the configured width or height, default `false`.\n* [**min**](http://sharp.dimens.io/en/stable/api/#min): *Boolean* — preserving aspect ratio, resize the image to be as small as possible while ensuring its dimensions are greater than or equal to the `width` and `height` specified.\n* [**max**](http://sharp.dimens.io/en/stable/api/#max): *Boolean* — resize to the max width or height the preserving aspect ratio (both `width` and `height` have to be defined), default `false`.\n* [**quality**](http://sharp.dimens.io/en/stable/api/#qualityquality): *Number* — output quality for JPEG, WebP and TIFF, default `80`.\n* [**progressive**](http://sharp.dimens.io/en/stable/api/#progressive): *Boolean* — progressive (interlace) scan for JPEG and PNG output, default `false`.\n* [**withMetadata**](http://sharp.dimens.io/en/stable/api/#withmetadatametadata): *Boolean* — include image metadata, default `false`.\n* [**compressionLevel**](http://sharp.dimens.io/en/stable/api/#compressionlevelcompressionlevel): *Number* — zlib compression level for PNG, default `6`.\n* [**rename**](#renaming): *String*, *Object* or *Function* — renaming options, file will not be renamed by default. When `extname` is specified, output format is parsed from extension. You can override this autodetection with `format` option.\n* [**format**](http://sharp.dimens.io/en/stable/api/#toformatformat): *String* — output format `jpeg`, `png`, `webp` or `raw`, default is `null`.\n* [**crop**](http://sharp.dimens.io/en/stable/api/#cropgravity): Crop the resized image to the exact size specified, default is `false`.\n* [**embed**](http://sharp.dimens.io/en/stable/api/#embed): Preserving aspect ratio, resize the image to the maximum `width` or `height` specified then `embed` on a `background` of the exact `width` and `height` specified, default is `false`.\n* [**ignoreAspectRatio**](http://sharp.dimens.io/en/stable/api/#ignoreaspectratio): *Boolean* — Ignoring the aspect ratio of the input, stretch the image to the exact `width` and/or `height` provided via `resize`, default is `false`.\n* [**interpolator**](http://sharp.dimens.io/en/stable/api/#resizewidth-height-options): *String* — The interpolator to use for image **enlargement**, defaulting to `bicubic`.\n* [**kernel**](http://sharp.dimens.io/en/stable/api/#resizewidth-height-options): *String* — The kernel to use for image **reduction**, defaulting to `lanczos3`.\n* [**background**](http://sharp.dimens.io/en/stable/api/#backgroundrgba): [*Color*](https://www.npmjs.com/package/color) — Set the background for the embed and flatten operations, '#default is `fff`'.\n* [**flatten**](http://sharp.dimens.io/en/stable/api/#flatten): *Boolean* — Merge alpha transparency channel, if any, with `background`, default is `false`.\n* [**negate**](http://sharp.dimens.io/en/stable/api/#negate): *Boolean* — Produces the \"negative\" of the image, default is `false`.\n* [**rotate**](http://sharp.dimens.io/en/stable/api/#rotateangle): *Boolean* — Rotate the output image by either an explicit angle or auto-orient based on the EXIF `Orientation` tag, default is `false`.\n* [**flip**](http://sharp.dimens.io/en/stable/api/#flip): *Boolean* — Flip the image about the vertical Y axis. This always occurs after rotation, if any. The use of `flip` implies the removal of the EXIF `Orientation` tag, if any. Default is `false`.\n* [**flop**](http://sharp.dimens.io/en/stable/api/#flop): *Boolean* — Flop the image about the horizontal X axis. This always occurs after rotation, if any. The use of `flop` implies the removal of the EXIF `Orientation` tag, if any. Default is `false`.\n* [**blur**](http://sharp.dimens.io/en/stable/api/#blursigma): *Boolean* — When used without parameters, performs a fast, mild blur of the output image. This typically reduces performance by 10%. Default is `false`.\n* [**sharpen**](http://sharp.dimens.io/en/stable/api/#sharpensigma-flat-jagged): *Boolean* — When used without parameters, performs a fast, mild sharpen of the output image. This typically reduces performance by 10%. Default is `false`.\n* [**threshold**](http://sharp.dimens.io/en/stable/api/#thresholdthreshold): *Number* or *Boolean* — Converts all pixels in the image to greyscale white or black, default is `false`.\n* [**gamma**](http://sharp.dimens.io/en/stable/api/#gammagamma): *Boolean* — Apply a gamma correction by reducing the encoding (darken) pre-resize at a factor of `1/gamma` then increasing the encoding (brighten) post-resize at a factor of `gamma`. Default is `false`.\n* [**grayscale**](http://sharp.dimens.io/en/stable/api/#grayscale-greyscale): *Boolean* — Convert to 8-bit greyscale; 256 shades of grey, default is `false`.\n* [**normalize**](http://sharp.dimens.io/en/stable/api/#normalize-normalise): *Boolean* — Enhance output image contrast by stretching its luminance to cover the full dynamic range. This typically reduces performance by 30%. Default is `false`.\n* [**tile**](http://sharp.dimens.io/en/stable/api/#tileoptions): *Boolean* or *Object* — The size and overlap, in pixels, of square Deep Zoom image pyramid tiles, default is `false`.\n* [**withoutChromaSubsampling**](http://sharp.dimens.io/en/stable/api/#withoutchromasubsampling): *Boolean* — Disable the use of [chroma subsampling](http://en.wikipedia.org/wiki/Chroma_subsampling) with JPEG output (4:4:4), default is `false`.\n\nDetailed description of each option can be found in the [sharp API documentation](http://sharp.dimens.io/en/stable/api/).\n\n##### Renaming\nRenaming is implemented by the [rename](https://www.npmjs.com/package/rename) module. Options correspond with options of [gulp-rename](https://www.npmjs.com/package/gulp-rename).\n\n#### options\n\n##### errorOnUnusedConfig\n\nType: `Boolean`  \nDefault: `true`\n\nEmit the error when configuration is not used.\n\n##### errorOnUnusedImage\n\nType: `Boolean`  \nDefault: `true`\n\nEmit the error when image is not used.\n\n##### passThroughUnused\n\nType: `Boolean`  \nDefault: `false`\n\nKeep unmatched images in the stream.\nTo use this option `errorOnUnusedImage` should be `false`.\n\n##### errorOnEnlargement\n\nType: `Boolean`  \nDefault: `true`\n\nEmit the error when image is enlarged.\n\n##### stats\n\nType: `Boolean`  \nDefault: `true`\n\nShow statistics after the run — how many images were created, how many were matched and how many were in the run in total.\n\n##### silent\n\nType: `Boolean`  \nDefault: `false`\n\nSilence messages and stats if 0 images were created. If you wish to supress all messages and stats, set the `options.stats` to `false` as well.\n\n> You can specify **global default value** for any of the [configuration options](#configuration-unit).\n\n```js\ngulp.task('default', function () {\n  return gulp.src('src/*.png')\n    .pipe(responsive(config, {\n      // global quality for all images\n      quality: 50,\n      errorOnUnusedImage: false\n    }))\n    .pipe(gulp.dest('dist'));\n});\n\n```\n\n## License\n\nMIT © [Evgeny Vlasenko](https://github.com/mahnunchik)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mahnunchik/gulp-responsive.git"
  },
  "scripts": {
    "lint": "jshint lib test",
    "test": "npm run lint && mocha"
  },
  "version": "2.7.0"
}
