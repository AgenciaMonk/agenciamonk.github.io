{
  "_args": [
    [
      {
        "raw": "gulp-uglify@^1.4.1",
        "scope": null,
        "escapedName": "gulp-uglify",
        "name": "gulp-uglify",
        "rawSpec": "^1.4.1",
        "spec": ">=1.4.1 <2.0.0",
        "type": "range"
      },
      "/Users/Monk/Desktop/GUSTAVO/site-grid/monk-framework"
    ]
  ],
  "_from": "gulp-uglify@>=1.4.1 <2.0.0",
  "_id": "gulp-uglify@1.5.4",
  "_inCache": true,
  "_location": "/gulp-uglify",
  "_nodeVersion": "4.4.5",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/gulp-uglify-1.5.4.tgz_1466626831389_0.47820967994630337"
  },
  "_npmUser": {
    "name": "terinjokes",
    "email": "terinjokes@gmail.com"
  },
  "_npmVersion": "2.15.5",
  "_phantomChildren": {
    "camelcase": "1.2.1",
    "center-align": "0.1.3",
    "decamelize": "1.2.0",
    "right-align": "0.1.3",
    "source-map": "0.5.6",
    "uglify-to-browserify": "1.0.2",
    "wordwrap": "0.0.2"
  },
  "_requested": {
    "raw": "gulp-uglify@^1.4.1",
    "scope": null,
    "escapedName": "gulp-uglify",
    "name": "gulp-uglify",
    "rawSpec": "^1.4.1",
    "spec": ">=1.4.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-uglify/-/gulp-uglify-1.5.4.tgz",
  "_shasum": "524788d87666d09f9d0c21fb2177f90039a658c9",
  "_shrinkwrap": null,
  "_spec": "gulp-uglify@^1.4.1",
  "_where": "/Users/Monk/Desktop/GUSTAVO/site-grid/monk-framework",
  "author": {
    "name": "Terin Stock",
    "email": "terinjokes@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/terinjokes/gulp-uglify/issues"
  },
  "dependencies": {
    "deap": "^1.0.0",
    "fancy-log": "^1.0.0",
    "gulp-util": "^3.0.0",
    "isobject": "^2.0.0",
    "through2": "^2.0.0",
    "uglify-js": "2.6.4",
    "uglify-save-license": "^0.4.1",
    "vinyl-sourcemaps-apply": "^0.2.0"
  },
  "description": "Minify files with UglifyJS.",
  "devDependencies": {
    "cmem": "^1.0.0",
    "coveralls": "^2.11.4",
    "gulp-concat": "^2.0.0",
    "gulp-sourcemaps": "^1.0.0",
    "istanbul": "^0.4.0",
    "tape": "^4.0.0",
    "vinyl": "^1.0.0",
    "xo": "^0.16.0"
  },
  "directories": {},
  "dist": {
    "shasum": "524788d87666d09f9d0c21fb2177f90039a658c9",
    "tarball": "https://registry.npmjs.org/gulp-uglify/-/gulp-uglify-1.5.4.tgz"
  },
  "files": [
    "index.js",
    "minifier.js",
    "lib/"
  ],
  "gitHead": "80da765a266cb7ff9d034a73bde0abe18d72d6de",
  "homepage": "https://github.com/terinjokes/gulp-uglify/",
  "keywords": [
    "gulpplugin"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "terinjokes",
      "email": "terinjokes@gmail.com"
    }
  ],
  "name": "gulp-uglify",
  "optionalDependencies": {},
  "readme": "# gulp-uglify [![][travis-shield-img]][travis-shield][![][appveyor-shield-img]][appveyor-shield][![][npm-dl-shield-img]][npm-shield][![][npm-v-shield-img]][npm-shield][![][coveralls-shield-img]][coveralls-shield]\n\n> Minify JavaScript with UglifyJS2.\n\n## Installation\n\nInstall package with NPM and add it to your development dependencies:\n\n`npm install --save-dev gulp-uglify`\n\n## Usage\n\n```javascript\nvar gulp = require('gulp');\nvar uglify = require('gulp-uglify');\nvar pump = require('pump');\n\ngulp.task('compress', function (cb) {\n  pump([\n        gulp.src('lib/*.js'),\n        uglify(),\n        gulp.dest('dist')\n    ],\n    cb\n  );\n});\n```\n\nTo help properly handle error conditions with Node streams, this project\nrecommends the use of [`pump`](https://github.com/mafintosh/pump). For more\ninformation, see [Why Use Pump?](docs/why-use-pump/README.md#why-use-pump).\n\n## Options\n\n- `mangle`\n\n\tPass `false` to skip mangling names.\n\n- `output`\n\n\tPass an object if you wish to specify additional [output\n\toptions](http://lisperator.net/uglifyjs/codegen). The defaults are\n\toptimized for best compression.\n\n- `compress`\n\n\tPass an object to specify custom [compressor\n\toptions](http://lisperator.net/uglifyjs/compress). Pass `false` to skip\n\tcompression completely.\n\n- `preserveComments`\n\n\tA convenience option for `options.output.comments`. Defaults to preserving no\n\tcomments.\n\n\t- `all`\n\n\t\tPreserve all comments in code blocks\n\n\t- `license`\n\n\t\tAttempts to preserve comments that likely contain licensing information,\n\t\teven if the comment does not have directives such as `@license` or `/*!`.\n\n\t\tImplemented via the [`uglify-save-license`](https://github.com/shinnn/uglify-save-license)\n\t\tmodule, this option preserves a comment if one of the following is true:\n\n\t\t1. The comment is in the *first* line of a file\n\t\t2. A regular expression matches the string of the comment.\n\t\t\t\tFor example: `MIT`, `@license`, or `Copyright`.\n\t\t3. There is a comment at the *previous* line, and it matches 1, 2, or 3.\n\n\t- `function`\n\n\t\tSpecify your own comment preservation function. You will be passed the\n\t\tcurrent node and the current comment and are expected to return either\n\t\t`true` or `false`.\n\n\t- `some` (deprecated)\n\n\t\tPreserve comments that start with a bang (`!`) or include a Closure Compiler\n\t\tdirective (`@preserve`, `@license`, `@cc_on`).\n\t\tDeprecated in favor of the `license` option, documented above.\n\nYou can also pass the `uglify` function any of the options [listed\nhere](https://github.com/mishoo/UglifyJS2#the-simple-way) to modify\nUglifyJS's behavior.\n\n## Errors\n\n`gulp-uglify` emits an 'error' event if it is unable to minify a specific file.\nWherever possible, the PluginError object will contain the following properties:\n\n- `fileName`\n- `lineNumber`\n- `message`\n\n## Using a Different UglifyJS\n\nBy default, `gulp-uglify` uses the version of UglifyJS installed as a dependency.\nIt's possible to configure the use of a different version using the \"minifier\" entry point.\n\n```javascript\nvar uglifyjs = require('uglify-js'); // can be a git checkout\n                                     // or another module (such as `uglify-js-harmony` for ES6 support)\nvar minifer = require('gulp-uglify/minifier');\nvar pump = require('pump');\n\ngulp.task('compress', function (cb) {\n  // the same options as described above\n  var options = {\n    preserveComments: 'license'\n  };\n\n  pump([\n      gulp.src('lib/*.js'),\n      minifier(options, uglifyjs),\n      gulp.dest('dist')\n    ],\n    cb\n  );\n});\n```\n\n[travis-shield-img]: https://img.shields.io/travis/terinjokes/gulp-uglify/master.svg?label=Travis%20CI&style=flat-square\n[travis-shield]: https://travis-ci.org/terinjokes/gulp-uglify\n[appveyor-shield-img]: https://img.shields.io/appveyor/ci/terinjokes/gulp-uglify/master.svg?label=AppVeyor&style=flat-square\n[appveyor-shield]: https://ci.appveyor.com/project/terinjokes/gulp-uglify\n[npm-dl-shield-img]: https://img.shields.io/npm/dm/gulp-uglify.svg?style=flat-square\n[npm-shield]: http://browsenpm.org/package/gulp-uglify\n[npm-v-shield-img]: https://img.shields.io/npm/v/gulp-uglify.svg?style=flat-square\n[coveralls-shield-img]: https://img.shields.io/coveralls/terinjokes/gulp-uglify/master.svg?style=flat-square\n[coveralls-shield]: https://coveralls.io/github/terinjokes/gulp-uglify\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/terinjokes/gulp-uglify.git"
  },
  "scripts": {
    "coverage": "cat ./coverage/lcov.info | coveralls",
    "test": "xo && istanbul cover ./node_modules/tape/bin/tape test/*.js"
  },
  "version": "1.5.4",
  "xo": {
    "space": true
  }
}
