{
  "_args": [
    [
      {
        "raw": "phantomjs-prebuilt@^2.1.3",
        "scope": null,
        "escapedName": "phantomjs-prebuilt",
        "name": "phantomjs-prebuilt",
        "rawSpec": "^2.1.3",
        "spec": ">=2.1.3 <3.0.0",
        "type": "range"
      },
      "/Users/Monk/Desktop/GUSTAVO/site-grid/monk-framework/node_modules/phridge"
    ]
  ],
  "_from": "phantomjs-prebuilt@>=2.1.3 <3.0.0",
  "_id": "phantomjs-prebuilt@2.1.14",
  "_inCache": true,
  "_location": "/phantomjs-prebuilt",
  "_nodeVersion": "4.6.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/phantomjs-prebuilt-2.1.14.tgz_1481303342638_0.49631132115609944"
  },
  "_npmUser": {
    "name": "nicks",
    "email": "nicholas.j.santos@gmail.com"
  },
  "_npmVersion": "2.15.9",
  "_phantomChildren": {
    "aws-sign2": "0.6.0",
    "aws4": "1.6.0",
    "caseless": "0.11.0",
    "combined-stream": "1.0.5",
    "extend": "3.0.0",
    "forever-agent": "0.6.1",
    "form-data": "2.1.4",
    "har-validator": "2.0.6",
    "hawk": "3.1.3",
    "http-signature": "1.1.1",
    "is-typedarray": "1.0.0",
    "isstream": "0.1.2",
    "json-stringify-safe": "5.0.1",
    "mime-types": "2.1.15",
    "oauth-sign": "0.8.2",
    "stringstream": "0.0.5",
    "tough-cookie": "2.3.2",
    "tunnel-agent": "0.4.3"
  },
  "_requested": {
    "raw": "phantomjs-prebuilt@^2.1.3",
    "scope": null,
    "escapedName": "phantomjs-prebuilt",
    "name": "phantomjs-prebuilt",
    "rawSpec": "^2.1.3",
    "spec": ">=2.1.3 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/phantom-bridge",
    "/phridge"
  ],
  "_resolved": "https://registry.npmjs.org/phantomjs-prebuilt/-/phantomjs-prebuilt-2.1.14.tgz",
  "_shasum": "d53d311fcfb7d1d08ddb24014558f1188c516da0",
  "_shrinkwrap": null,
  "_spec": "phantomjs-prebuilt@^2.1.3",
  "_where": "/Users/Monk/Desktop/GUSTAVO/site-grid/monk-framework/node_modules/phridge",
  "author": {
    "name": "Dan Pupius",
    "email": "dan@obvious.com",
    "url": "http://pupius.co.uk"
  },
  "bin": {
    "phantomjs": "./bin/phantomjs"
  },
  "bugs": {
    "url": "https://github.com/Medium/phantomjs/issues"
  },
  "dependencies": {
    "es6-promise": "~4.0.3",
    "extract-zip": "~1.5.0",
    "fs-extra": "~1.0.0",
    "hasha": "~2.2.0",
    "kew": "~0.7.0",
    "progress": "~1.1.8",
    "request": "~2.79.0",
    "request-progress": "~2.0.1",
    "which": "~1.2.10"
  },
  "description": "Headless WebKit with JS API",
  "devDependencies": {
    "eslint": "2.7.0",
    "nodeunit": "0.9.1",
    "webdriverio": "~4.2.3"
  },
  "directories": {},
  "dist": {
    "shasum": "d53d311fcfb7d1d08ddb24014558f1188c516da0",
    "tarball": "https://registry.npmjs.org/phantomjs-prebuilt/-/phantomjs-prebuilt-2.1.14.tgz"
  },
  "gitHead": "750d5f32e1586fe0b34c782dd87f60cbb21e6441",
  "homepage": "https://github.com/Medium/phantomjs",
  "keywords": [
    "phantomjs",
    "headless",
    "webkit"
  ],
  "license": "Apache-2.0",
  "main": "lib/phantomjs",
  "maintainers": [
    {
      "name": "Dan Pupius",
      "email": "dan@medium.com",
      "url": "http://pupius.co.uk/"
    },
    {
      "name": "Nick Santos",
      "email": "nick@medium.com",
      "url": "http://nick-santos.com/"
    }
  ],
  "name": "phantomjs-prebuilt",
  "optionalDependencies": {},
  "readme": "phantomjs-prebuilt\n==================\n\nAn NPM installer for [PhantomJS](http://phantomjs.org/), headless webkit with JS API.\n\n[![Build Status](https://travis-ci.org/Medium/phantomjs.svg?branch=master)](https://travis-ci.org/Medium/phantomjs)\n\nBuilding and Installing\n-----------------------\n\n```shell\nnpm install phantomjs-prebuilt\n```\n\nOr grab the source and\n\n```shell\nnode ./install.js\n```\n\nWhat this installer is really doing is just grabbing a particular \"blessed\" (by\nthis module) version of Phantom. As new versions of Phantom are released\nand vetted, this module will be updated accordingly.\n\nRunning\n-------\n\n```shell\nbin/phantomjs [phantom arguments]\n```\n\nAnd npm will install a link to the binary in `node_modules/.bin` as\nit is wont to do.\n\nRunning via node\n----------------\n\nThe package exports a `path` string that contains the path to the\nphantomjs binary/executable.\n\nBelow is an example of using this package via node.\n\n```javascript\nvar path = require('path')\nvar childProcess = require('child_process')\nvar phantomjs = require('phantomjs-prebuilt')\nvar binPath = phantomjs.path\n\nvar childArgs = [\n  path.join(__dirname, 'phantomjs-script.js'),\n  'some other argument (passed to phantomjs script)'\n]\n\nchildProcess.execFile(binPath, childArgs, function(err, stdout, stderr) {\n  // handle results\n})\n\n```\n\nOr `exec()` method is also provided for convenience:\n\n```javascript\nvar phantomjs = require('phantomjs-prebuilt')\nvar program = phantomjs.exec('phantomjs-script.js', 'arg1', 'arg2')\nprogram.stdout.pipe(process.stdout)\nprogram.stderr.pipe(process.stderr)\nprogram.on('exit', code => {\n  // do something on end\n})\n```\n\nNote: [childProcess.spawn()](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options) is called inside `exec()`.\n\nRunning with WebDriver\n----------------------\n\n`run()` method detects when PhantomJS gets ready. It's handy to use with WebDriver (Selenium).\n\n```javascript\nvar phantomjs = require('phantomjs-prebuilt')\nvar webdriverio = require('webdriverio')\nvar wdOpts = { desiredCapabilities: { browserName: 'phantomjs' } }\n\nphantomjs.run('--webdriver=4444').then(program => {\n  webdriverio.remote(wdOpts).init()\n    .url('https://developer.mozilla.org/en-US/')\n    .getTitle().then(title => {\n      console.log(title) // 'Mozilla Developer Network'\n      program.kill() // quits PhantomJS\n    })\n})\n```\n\nVersioning\n----------\n\nThe major and minor number tracks the version of PhantomJS that will be\ninstalled. The patch number is incremented when there is either an installer\nupdate or a patch build of the phantom binary.\n\nPre-2.0, this package was published to NPM as [phantomjs](https://www.npmjs.com/package/phantomjs).\nWe changed the name to [phantomjs-prebuilt](https://www.npmjs.com/package/phantomjs-prebuilt) at\nthe request of PhantomJS team.\n\nContinuous Integration\n----------------------\n\nPlease **do not** download PhantomJS for every CI job because it can quickly\noverload our CDNs. Instead take advantage of CI caching.\n\nIn [Travis-CI](https://travis-ci.org/) add the following to your `.travis.yml`\nto [enable caching](https://docs.travis-ci.com/user/caching/) & avoid repeated\ndownloads of PhantomJS.\n\n#### .travis.yml\n```yml\ncache:\n  directories:\n    - travis_phantomjs\n\nbefore_install:\n  # Upgrade PhantomJS to v2.1.1.\n  - \"export PHANTOMJS_VERSION=2.1.1\"\n  - \"export PATH=$PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/bin:$PATH\"\n  - \"if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then rm -rf $PWD/travis_phantomjs; mkdir -p $PWD/travis_phantomjs; fi\"\n  - \"if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then wget https://github.com/Medium/phantomjs/releases/download/v$PHANTOMJS_VERSION/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -O $PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2; fi\"\n  - \"if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then tar -xvf $PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C $PWD/travis_phantomjs; fi\"\n  - \"phantomjs --version\"\n```\n\nDeciding Where To Get PhantomJS\n-------------------------------\n\nBy default, this package will download phantomjs from our [releases](https://github.com/Medium/phantomjs/releases/).\nThis should work fine for most people.\n\n##### Downloading from a custom URL\n\nIf github is down, or the Great Firewall is blocking github, you may need to use\na different download mirror. To set a mirror, set npm config property `phantomjs_cdnurl`.\n\nAlternatives include `https://bitbucket.org/ariya/phantomjs/downloads` (the official download site)\nand `http://cnpmjs.org/downloads`.\n\n```Shell\nnpm install phantomjs-prebuilt --phantomjs_cdnurl=https://bitbucket.org/ariya/phantomjs/downloads\n```\n\nOr add property into your `.npmrc` file (https://www.npmjs.org/doc/files/npmrc.html)\n\n```\nphantomjs_cdnurl=https://bitbucket.org/ariya/phantomjs/downloads\n```\n\nAnother option is to use PATH variable `PHANTOMJS_CDNURL`.\n```shell\nPHANTOMJS_CDNURL=https://bitbucket.org/ariya/phantomjs/downloads npm install phantomjs\n```\n\n##### Using PhantomJS from disk\n\nIf you plan to install phantomjs many times on a single machine, you can\ninstall the `phantomjs` binary on PATH. The installer will automatically detect\nand use that for non-global installs.\n\nCross-Platform Repositories\n---------------------------\n\nPhantomJS needs to be compiled separately for each platform. This installer\nfinds a prebuilt binary for your operating system, and downloads it.\n\nIf you check your dependencies into git, and work on a cross-platform\nteam, then you need to tell NPM to rebuild any platform-specific dependencies. Run\n\n```shell\nnpm rebuild\n```\n\nas part of your build process. This problem is not specific to PhantomJS, and this\nsolution will work for any NodeJS package with native or platform-specific code.\n\nIf you know in advance that you want to install PhantomJS for a specific architecture,\nyou can set the environment variables: `PHANTOMJS_PLATFORM`\n(to set target platform) and `PHANTOMJS_ARCH` (to set target\narch), where `platform` and `arch` are valid values for\n[process.platform and process.arch](https://nodejs.org/api/process.html).\n\nA Note on PhantomJS\n-------------------\n\nPhantomJS is not a library for NodeJS.  It's a separate environment and code\nwritten for node is unlikely to be compatible.  In particular PhantomJS does\nnot expose a Common JS package loader.\n\nThis is an _NPM wrapper_ and can be used to conveniently make Phantom available.\nIt is not a Node JS wrapper.\n\nI have had reasonable experiences writing standalone Phantom scripts which I\nthen drive from within a node program by spawning phantom in a child process.\n\nRead the PhantomJS FAQ for more details: http://phantomjs.org/faq.html\n\n### Linux Note\n\nAn extra note on Linux usage, from the PhantomJS download page:\n\n > There is no requirement to install Qt, WebKit, or any other libraries. It\n > however still relies on Fontconfig (the package fontconfig or libfontconfig,\n > depending on the distribution).\n\nTroubleshooting\n---------------\n\n##### Installation fails with `spawn ENOENT`\n\nThis is NPM's way of telling you that it was not able to start a process. It usually means:\n\n- `node` is not on your PATH, or otherwise not correctly installed.\n- `tar` is not on your PATH. This package expects `tar` on your PATH on Linux-based platforms.\n- `bzip2` is not on your PATH.\n\nCheck your specific error message for more information.\n\n##### Installation fails with `Error: EPERM` or `operation not permitted` or `permission denied`\n\nThis error means that NPM was not able to install phantomjs to the file system. There are three\nmajor reasons why this could happen:\n\n- You don't have write access to the installation directory.\n- The permissions in the NPM cache got messed up, and you need to run `npm cache clean` to fix them.\n- You have over-zealous anti-virus software installed, and it's blocking file system writes.\n\n##### Installation fails with `Error: read ECONNRESET` or `Error: connect ETIMEDOUT`\n\nThis error means that something went wrong with your internet connection, and the installer\nwas not able to download the PhantomJS binary for your platform. Please try again.\n\n##### I tried again, but I get `ECONNRESET` or `ETIMEDOUT` consistently.\n\nDo you live in China, or a country with an authoritarian government? We've seen problems where\nthe GFW or local ISP blocks github, preventing the installer from downloading the binary.\n\nTry visiting [the download page](https://bitbucket.org/ariya/phantomjs/downloads) manually.\nIf that page is blocked, you can try using a different CDN with the `PHANTOMJS_CDNURL`\nenv variable described above.\n\n##### I am behind a corporate proxy that uses self-signed SSL certificates to intercept encrypted traffic.\n\nYou can tell NPM and the PhantomJS installer to skip validation of ssl keys with NPM's\n[strict-ssl](https://www.npmjs.org/doc/misc/npm-config.html#strict-ssl) setting:\n\n```\nnpm set strict-ssl false\n```\n\nWARNING: Turning off `strict-ssl` leaves you vulnerable to attackers reading\nyour encrypted traffic, so run this at your own risk!\n\n##### I tried everything, but my network is b0rked. What do I do?\n\nIf you install PhantomJS manually, and put it on PATH, the installer will try to\nuse the manually-installed binaries.\n\n##### I'm on Debian or Ubuntu, and the installer failed because it couldn't find `node`\n\nSome Linux distros tried to rename `node` to `nodejs` due to a package\nconflict. This is a non-portable change, and we do not try to support this. The\n[official documentation](https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#ubuntu-mint-elementary-os)\nrecommends that you run `apt-get install nodejs-legacy` to symlink `node` to `nodejs`\non those platforms, or many NodeJS programs won't work properly.\n\n##### I'm using an unsupported version of Linux or an ARM processor. I get errors about \"Unexpected platform or architecture\". What do I do?\n\nWe only have binaries available for common OS / processor configurations. Sorry.\n\nYou may be able to get a PhantomJS binary from your operating system's package\nmanager. Or you can build your own from source. If you put that binary on PATH,\nthis installer will use it (see \"Deciding Where to Get PhantomJS\" above).\n\n\nContributing\n------------\n\nQuestions, comments, bug reports, and pull requests are all welcome.  Submit them at\n[the project on GitHub](https://github.com/Medium/phantomjs/).  If you haven't contributed to an\n[Medium](http://github.com/Medium/) project before please head over to the\n[Open Source Project](https://github.com/Medium/open-source#note-to-external-contributors) and fill\nout an OCLA (it should be pretty painless).\n\nBug reports that include steps-to-reproduce (including code) are the\nbest. Even better, make them in the form of pull requests.\n\nAuthor\n------\n\n[Dan Pupius](https://github.com/dpup)\n([personal website](http://pupius.co.uk)) and\n[Nick Santos](https://github.com/nicks), supported by\n[A Medium Corporation](http://medium.com/).\n\nLicense\n-------\n\nCopyright 2012 [A Medium Corporation](http://medium.com/).\n\nLicensed under the Apache License, Version 2.0.\nSee the top-level file `LICENSE.txt` and\n(http://www.apache.org/licenses/LICENSE-2.0).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Medium/phantomjs.git"
  },
  "scripts": {
    "install": "node install.js",
    "test": "nodeunit --reporter=minimal test/tests.js && eslint ."
  },
  "version": "2.1.14"
}
